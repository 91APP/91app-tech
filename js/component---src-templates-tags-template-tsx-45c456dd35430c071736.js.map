{"version":3,"sources":["webpack:///./src/templates/TagsTemplate.tsx"],"names":["props","data","article","useContext","title","container","spacing","item","xs","articleList","enablePagination","limit","showAuthor","pageQuery"],"mappings":"8FAAA,6HAiCA,UArBiC,SAACA,GAAU,IAChCC,EAASD,EADuB,KAKhCE,EAHUC,qBAFsB,+CAMxC,OACI,iBAAQC,MAAM,QACV,iBAAMC,WAAN,EAAgBC,QAAS,GACrB,iBAAMC,MAAN,EAAWC,GAAI,IACX,iBACIC,YAAaR,oBADjB,MAEIS,iBAAkBR,EAFtB,iBAGIS,MAAOT,EAHX,MAIIU,WAAYV,EAAQU,iBAQrC,IAAMC,EAAN","file":"js/component---src-templates-tags-template-tsx-45c456dd35430c071736.js","sourcesContent":["import React, { FC, useContext } from 'react';\nimport { graphql } from 'gatsby';\nimport Grid from '@material-ui/core/Grid';\nimport { GlobalContext } from '@src/provider';\nimport { default as Layout } from '@src/components/layout';\nimport { default as ArticleMaker } from '@src/components/ArticleMaker';\n\ntype IProps = {\n    data: {\n        allMarkdownRemark: any;\n    };\n};\nconst TagsTemplate: FC<IProps> = (props) => {\n    const { data } = props;\n    const { state } = useContext(GlobalContext);\n    const { tagsTemplateData } = state;\n    const { components } = tagsTemplateData;\n    const { article } = components;\n    return (\n        <Layout title=\"tags\">\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <ArticleMaker\n                        articleList={data.allMarkdownRemark.edges}\n                        enablePagination={article.enablePagination}\n                        limit={article.limit}\n                        showAuthor={article.showAuthor}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\nexport default TagsTemplate;\nexport const pageQuery = graphql`\n    query($tag: [String]) {\n        allMarkdownRemark(filter: { frontmatter: { published: { eq: true }, tags: { in: $tag } } }) {\n            edges {\n                node {\n                    id\n                    excerpt\n                    frontmatter {\n                        date(formatString: \"YYYY/MM/DD\")\n                        title\n                        tags\n                        category\n                        bannerPhoto {\n                            childImageSharp {\n                                fluid {\n                                    src\n                                    originalName\n                                }\n                            }\n                        }\n                        authorPhoto {\n                            childImageSharp {\n                                fluid {\n                                    src\n                                    originalName\n                                }\n                            }\n                        }\n                        author\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}